generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

model Account {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?   @map("refresh_token")  
  access_token      String?   @map("access_token")   
  expiresAt         DateTime
  token_type        String?
  scope             String?
  id_token          String?   @map("id_token")       
  session_state     String?
  user User @relation(fields: [userId], references: [id])
  userId           String @unique @db.ObjectId

}

model User {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  name                   String
  email                  String?  @unique
  password               String
  emailVerified           DateTime?
  createdAt DateTime @default(now())
  accounts               Account[]
  refreshTokens          RefreshToken[]
  resetTokens            ResetToken[]
  emailVerificationTokens EmailVerificationToken[]
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String    @unique
  createdAt DateTime @default(now())
  user       User      @relation(fields: [userId], references: [id])
  userId     String @unique @db.ObjectId
}

model ResetToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String    @unique
  expiresAt  DateTime
  createdAt DateTime @default(now())
  user       User      @relation(fields: [userId], references: [id])
  userId     String @unique @db.ObjectId
}

model EmailVerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String    @unique
  expiresAt  DateTime
  createdAt DateTime @default(now())
  user       User      @relation(fields: [userId], references: [id])
  userId     String @unique @db.ObjectId
}
